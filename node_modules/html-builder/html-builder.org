* TODO
** change it into a server that you can give commands and uses websockets to communicate
* html-builder
** substitue module objects in script block file list with more file entries
add module before the file extension so that bb-server knows to strip it before
finding the file on disk.
** concat all js files in a block:
0 js:modulename 145 coffee 200 sweetjs 200 coffee:modulename
Four scripts, with line numbers. Every bundle could be requested as
name.bundle so bb-server knows what it is, then split it up, recast the parts,
concat the result and cache it. 
On second thought, bb-server can/should concatenate all the files. Why not. When
concatenate===true in recipe, just insert script tag for a file that's marked as bundle
(?bundle) but that only lists a bunch of files. Bb-server can recast them,
concat them, minify and gzip them before sending to the browser.
   
** DONE cachifying resources
put timestamped files in the source code at every build(as set in the
recipe per extension), timestamp gets stripped off by bb-server anyway
when the file is requested. Files that are the same will have same
time stamp and the browser will use the cached version.

https://github.com/code42day/connect-cachify-static
You need to cachify all resources that you want cached longterm
Easy in html-builder with js and css. Trickier with images and ajax
calls, or other inline resource requesters such as loose script and link
tags.
Html-builder can try to find them and cachify them. Such as any img
tags with a string for a src. But prefetching
would be better. A rebuild would update references to modified
resources with new cachified links.
** cachify list:
CloudFlare's CDN caches the following types of static content by extension for
all account types by default:

css js jpg jpeg gif ico png bmp pict csv doc pdf pls ppt tif tiff eps swf midi
mid ttf eot woff svg svgz webp docx xlsx xls pptx ps


** prefetching
 http://www.4thkingdom.com/public/computers/789073-web-site-speed-prefetching-images-css/view-post.html  
** sitemap
   http://en.wikipedia.org/wiki/Sitemaps
Make a draft of sitemap by extracting it from the menu in recipe.js 
** editing of site (inline preferably)
  See testsite for working prototype 
  add login link to page, or with path /login a bar appears on top, or
  the link appears.
  In topbar is logout, editmode off/on, Save changes (Automatically
  takes dated snapshot), Snapshots: Take, Use.., Download (tick to take snapshot and download), Upload
  (tick to use)

TTake snapshot (give it a name), Use snapshot..
  Download snapshot (to computer or dropbox or filepicker), Upload Snapshot
inline x-editable, http://vitalets.github.io/x-editable/demo.html?c=inline
ckeditor inline http://ckeditor.com/demo#inline
http://mattduvall.com/grande.js/
http://sofish.github.io/pen/
http://hallojs.org/
https://github.com/daviferreira/medium-editor
http://www.zenpen.io/
